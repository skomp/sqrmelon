<!--
These uniforms will be added when creating a new shot
But there's loads more, so here's all uniforms in the template that you may want to animate:

 vec3 uOrigin: Camera position
 vec3 uAngles: Camera rotation
float uFovBias: Camera FOV, it's the angle in radians from the center of the screen to the top of the screen
float uSharpDist: Focal point, units from the camera at which the view is 100% sharp
float uSharpRange: Fake distance from the focal point which is also forced 100% sharp, helps in creating tilt-shift effects by having excessive blurry backgrounds but with sharp core objects
float uBlurFalloff: Distance away from the sharp distance that things get 100% blurry
float uMaxBlur: Maximum blur amount (in pixels, yes this is resolution dependent, sorry)
float uExposure: Exposure offsets the scene brightness (in linear space) with a nice response curve.
float uBlack: Fade to black
float uWhite: Fade to white
float uMirrorX: Mirror in screen space

float uSaturation: Saturation, default is 1 (normal coloring), 0 would be greyscale.
float uGamma: Pows() the entire screen, in linear space before tone mapping. I'm considering removing this as it is often replaced with something more powerful added per demo in present.glsl

float uFilmGrain: Fades in some grain, default is off (0)

float uVignetting: [0-1] vignette fade, default is off (0)
 vec3 uVignetteColor: When using vignette, default is black (0, 0, 0)
float uGlitchAmountA: Screen-space jittering horizontal bars, default is off (0)
 vec4 uGlitchAmountB: X tiles, Y tiles, Z = intensity, W = animation speed in beats, default is off (z = 0)

float uBloom: Essentially adds a blurred version of the scene to the final result. Most visible with colors > 1, you can edit bloom.glsl to avoid animating it.
float uLensDirt: Multiplies a blurred version of the scene with a lens dirt and adds that to the final result.

float uChromaticAberrationRadius: Chromatic aberration filter, default is (0) which turns it off (because it normalizes all the samples and the color separation has no energy loss).

// Shoots a ray through the current pixel based on uV and uFrustum
 vec3 uShake: Camera (position only) shake, X = speed, Y = seed, Z = amount.
float uFishEye: Fits a perfect sphere lens in the current frustum, only works with values in range [0, 0.5)
-->
<templates>
    <template name="default">
        <channel name="uOrigin.x" value="0.0"/>
        <channel name="uOrigin.y" value="1.0"/>
        <channel name="uOrigin.z" value="-10.0"/>
        <channel name="uAngles.x" value="0.0"/>
        <channel name="uAngles.y" value="0.0"/>
        <channel name="uAngles.z" value="0.0"/>

        <channel name="uFovBias" value="0.32"/>
        <channel name="uSharpDist" value="25.0"/>
        <channel name="uSharpRange" value="0.0"/>
        <channel name="uBlurFalloff" value="500.0"/>
        <channel name="uMaxBlur" value="0.0"/>

        <channel name="uExposure" value="0.0"/>
    </template>
</templates>
